{"ast":null,"code":"var _jsxFileName = \"B:\\\\Imagenes\\\\FrontEnd\\\\Proyectos\\\\podcasts\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Next.js usa import dinámico. Cuando se llama React lo importa automáticamente sin tener import explícito\nimport 'isomorphic-fetch'; // importando fetch para todas las pages\n\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\nexport default class extends React.Component {\n  // getInitialProps() es una función que solo se puede ejecutar en Next.js\n  static async getInitialProps({}) {\n    // Llamo al API de audioboom y obtengo la los caneles recomendados\n    try {\n      let req = await fetch('https://api.audioboom.com/channels/recommended'); //  obtengo todo lo que contiene \"body\": [] y lo asigno a una variable llamada channels\n\n      let {\n        body: channels\n      } = await req.json(); // Regreso todos los channels\n\n      return {\n        channels,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channels: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channels,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(Layout, {\n      title: \"App de Podcasts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(ChannelGrid, {\n      channels: channels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["B:/Imagenes/FrontEnd/Proyectos/podcasts/pages/index.js"],"names":["Link","Layout","ChannelGrid","Error","React","Component","getInitialProps","req","fetch","body","channels","json","statusCode","e","render","props"],"mappings":";;;AAAA;AACA,OAAO,kBAAP,C,CAA2B;;AAC3B,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAC3C;AAEA,eAAaC,eAAb,CAA6B,EAA7B,EAAmC;AACjC;AACA,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,CAArB,CADE,CAEF;;AACA,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAqB,MAAMH,GAAG,CAACI,IAAJ,EAA/B,CAHE,CAIF;;AACA,aAAO;AAAED,QAAAA,QAAF;AAAYE,QAAAA,UAAU,EAAE;AAAxB,OAAP;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACV,aAAO;AAAEH,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,UAAU,EAAE;AAA9B,OAAP;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAA2B,KAAKG,KAAtC;;AAEA,QAAIH,UAAU,KAAK,GAAnB,EAAwB;AACtB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA5B0C","sourcesContent":["// Next.js usa import dinámico. Cuando se llama React lo importa automáticamente sin tener import explícito\r\nimport 'isomorphic-fetch'; // importando fetch para todas las pages\r\nimport Link from 'next/link';\r\nimport Layout from '../components/Layout';\r\nimport ChannelGrid from '../components/ChannelGrid';\r\nimport Error from 'next/error';\r\n\r\nexport default class extends React.Component {\r\n  // getInitialProps() es una función que solo se puede ejecutar en Next.js\r\n\r\n  static async getInitialProps({  }) {\r\n    // Llamo al API de audioboom y obtengo la los caneles recomendados\r\n    try {\r\n      let req = await fetch('https://api.audioboom.com/channels/recommended');\r\n      //  obtengo todo lo que contiene \"body\": [] y lo asigno a una variable llamada channels\r\n      let { body: channels } = await req.json();\r\n      // Regreso todos los channels\r\n      return { channels, statusCode: 200 };\r\n    } catch (e) {\r\n      return { channels: null, statusCode: 503 };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { channels, statusCode } = this.props;\r\n\r\n    if (statusCode !== 200) {\r\n      return <Error statusCode={statusCode} />;\r\n    }\r\n\r\n    return (\r\n      <Layout title='App de Podcasts'>\r\n        <ChannelGrid channels={channels} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}