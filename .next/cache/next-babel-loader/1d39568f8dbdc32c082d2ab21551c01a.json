{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport PodcastList from '../components/PodcastList';\nimport Error from './_error';\n\nclass Channel extends React.Component {\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 404) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: 404\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      let response = {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n      return _objectSpread({}, response);\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-2808650993\" + \" \" + 'banner'\n    }), __jsx(\"h1\", {\n      className: \"jsx-2808650993\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-2808650993\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-2808650993\"\n    }, \"Series\"), __jsx(\"div\", {\n      className: \"jsx-2808650993\" + \" \" + 'channels'\n    }, series.map((serie, i) => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      key: i\n    }, __jsx(\"a\", {\n      className: \"jsx-2808650993\" + \" \" + 'channel'\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-2808650993\"\n    }), __jsx(\"h2\", {\n      className: \"jsx-2808650993\"\n    }, serie.title)))))), __jsx(\"h2\", {\n      className: \"jsx-2808650993\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastList, {\n      audioClips: audioClips\n    }), __jsx(_JSXStyle, {\n      id: \"2808650993\"\n    }, [\".banner.jsx-2808650993{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}\", \"h1.jsx-2808650993{padding:5px;font-size:2em;font-weight:600;margin:1em 0;text-align:center;}\", \".channels.jsx-2808650993{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));grid-gap:15px;padding:15px;}\", \".channel.jsx-2808650993{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;-webkit-text-decoration:none;text-decoration:none;color:#000;}\", \".channel.jsx-2808650993 img.jsx-2808650993{width:100%;}\", \"h2.jsx-2808650993{padding:5px;font-size:1.5em;font-weight:600;margin:0;text-align:center;}\"]));\n  }\n\n}\n\nexport default Channel;","map":null,"metadata":{},"sourceType":"module"}